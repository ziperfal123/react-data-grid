{"version":3,"file":"HeaderCell.js","sourceRoot":"","sources":["../src/HeaderCell.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,EAAE,aAAa,EAAE,MAAM,OAAO,CAAC;AAC7C,OAAO,IAAI,MAAM,MAAM,CAAC;AAIxB,OAAO,kBAAkB,MAAM,kCAAkC,CAAC;AAClE,OAAO,mBAAmB,MAAM,mCAAmC,CAAC;AAGpE,SAAS,WAAW,CAAC,aAA6B;IAChD,QAAQ,aAAa,EAAE;QACrB,KAAK,KAAK;YACR,OAAO,WAAW,CAAC;QACrB,KAAK,MAAM;YACT,OAAO,YAAY,CAAC;QACtB;YACE,OAAO,MAAM,CAAC;KACjB;AACH,CAAC;AAeD,MAAM,CAAC,OAAO,UAAU,UAAU,CAAQ,EACxC,MAAM,EACN,QAAQ,EACR,eAAe,EACf,wBAAwB,EACxB,UAAU,EACV,aAAa,EACb,MAAM,EACiB;IACvB,SAAS,OAAO;QACd,IAAI,MAAM,CAAC,cAAc,EAAE;YACzB,OAAO,aAAa,CAAC,MAAM,CAAC,cAAc,EAAE;gBAC1C,MAAM;gBACN,UAAU;gBACV,aAAa;gBACb,MAAM;gBACN,eAAe;gBACf,wBAAwB;aACzB,CAAC,CAAC;SACJ;QAED,IAAI,MAAM,CAAC,QAAQ,EAAE;YACnB,OAAO,CACL,oBAAC,kBAAkB,IACjB,MAAM,EAAE,MAAM,EACd,MAAM,EAAE,MAAM,EACd,UAAU,EAAE,UAAU,EACtB,aAAa,EAAE,aAAa,IAE3B,MAAM,CAAC,IAAI,CACO,CACtB,CAAC;SACH;QAED,OAAO,MAAM,CAAC,IAAI,CAAC;IACrB,CAAC;IAED,IAAI,IAAI,GAAG,OAAO,EAAE,CAAC;IAErB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,eAAe,EAAE;QACzD,iBAAiB,EAAE,MAAM,CAAC,MAAM;QAChC,sBAAsB,EAAE,MAAM,CAAC,kBAAkB;KAClD,CAAC,CAAC;IACH,MAAM,KAAK,GAAwB;QACjC,KAAK,EAAE,MAAM,CAAC,KAAK;QACnB,IAAI,EAAE,MAAM,CAAC,IAAI;KAClB,CAAC;IAEF,IAAI,GAAG,CACL,6BACE,IAAI,EAAC,cAAc,mBACJ,MAAM,CAAC,GAAG,GAAG,CAAC,eAClB,UAAU,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAC7E,SAAS,EAAE,SAAS,EACpB,KAAK,EAAE,KAAK,IAEX,IAAI,CACD,CACP,CAAC;IAEF,IAAI,MAAM,CAAC,SAAS,EAAE;QACpB,IAAI,GAAG,CACL,oBAAC,mBAAmB,IAClB,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,QAAQ,IAEjB,IAAuD,CACpC,CACvB,CAAC;KACH;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import React, { createElement } from 'react';\nimport clsx from 'clsx';\n\nimport { CalculatedColumn } from './types';\nimport { HeaderRowProps } from './HeaderRow';\nimport SortableHeaderCell from './headerCells/SortableHeaderCell';\nimport ResizableHeaderCell from './headerCells/ResizableHeaderCell';\nimport { SortDirection } from './enums';\n\nfunction getAriaSort(sortDirection?: SortDirection) {\n  switch (sortDirection) {\n    case 'ASC':\n      return 'ascending';\n    case 'DESC':\n      return 'descending';\n    default:\n      return 'none';\n  }\n}\n\ntype SharedHeaderRowProps<R, SR> = Pick<HeaderRowProps<R, SR>,\n  | 'sortColumn'\n  | 'sortDirection'\n  | 'onSort'\n  | 'allRowsSelected'\n>;\n\nexport interface HeaderCellProps<R, SR> extends SharedHeaderRowProps<R, SR> {\n  column: CalculatedColumn<R, SR>;\n  onResize: (column: CalculatedColumn<R, SR>, width: number) => void;\n  onAllRowsSelectionChange: (checked: boolean) => void;\n}\n\nexport default function HeaderCell<R, SR>({\n  column,\n  onResize,\n  allRowsSelected,\n  onAllRowsSelectionChange,\n  sortColumn,\n  sortDirection,\n  onSort\n}: HeaderCellProps<R, SR>) {\n  function getCell() {\n    if (column.headerRenderer) {\n      return createElement(column.headerRenderer, {\n        column,\n        sortColumn,\n        sortDirection,\n        onSort,\n        allRowsSelected,\n        onAllRowsSelectionChange\n      });\n    }\n\n    if (column.sortable) {\n      return (\n        <SortableHeaderCell\n          column={column}\n          onSort={onSort}\n          sortColumn={sortColumn}\n          sortDirection={sortDirection}\n        >\n          {column.name}\n        </SortableHeaderCell>\n      );\n    }\n\n    return column.name;\n  }\n\n  let cell = getCell();\n\n  const className = clsx('rdg-cell', column.headerCellClass, {\n    'rdg-cell-frozen': column.frozen,\n    'rdg-cell-frozen-last': column.isLastFrozenColumn\n  });\n  const style: React.CSSProperties = {\n    width: column.width,\n    left: column.left\n  };\n\n  cell = (\n    <div\n      role=\"columnheader\"\n      aria-colindex={column.idx + 1}\n      aria-sort={sortColumn === column.key ? getAriaSort(sortDirection) : undefined}\n      className={className}\n      style={style}\n    >\n      {cell}\n    </div>\n  );\n\n  if (column.resizable) {\n    cell = (\n      <ResizableHeaderCell\n        column={column}\n        onResize={onResize}\n      >\n        {cell as React.ReactElement<React.ComponentProps<'div'>>}\n      </ResizableHeaderCell>\n    );\n  }\n\n  return cell;\n}\n"]}
{"version":3,"file":"useFocusRef.js","sourceRoot":"","sources":["../../src/hooks/useFocusRef.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,MAAM,OAAO,CAAC;AAEhD,MAAM,UAAU,WAAW,CAA6B,cAAmC;IACzF,MAAM,GAAG,GAAG,MAAM,CAAI,IAAI,CAAC,CAAC;IAC5B,eAAe,CAAC,GAAG,EAAE;;QACnB,IAAI,CAAC,cAAc;YAAE,OAAO;QAC5B,MAAA,GAAG,CAAC,OAAO,0CAAE,KAAK,CAAC,EAAE,aAAa,EAAE,IAAI,EAAE,EAAE;IAC9C,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;IAErB,OAAO,GAAG,CAAC;AACb,CAAC","sourcesContent":["import { useRef, useLayoutEffect } from 'react';\n\nexport function useFocusRef<T extends HTMLOrSVGElement>(isCellSelected: boolean | undefined) {\n  const ref = useRef<T>(null);\n  useLayoutEffect(() => {\n    if (!isCellSelected) return;\n    ref.current?.focus({ preventScroll: true });\n  }, [isCellSelected]);\n\n  return ref;\n}\n"]}
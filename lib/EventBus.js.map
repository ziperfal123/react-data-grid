{"version":3,"file":"EventBus.js","sourceRoot":"","sources":["../src/EventBus.ts"],"names":[],"mappings":"AAUA,MAAM,CAAC,OAAO,OAAO,QAAQ;IAA7B;QACmB,gBAAW,GAAG,IAAI,GAAG,EAAuC,CAAC;IAwBhF,CAAC;IAtBC,SAAS,CAAsB,IAAO,EAAE,OAAoB;QAC1D,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;SACvC;QAED,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAE,CAAC;QAC7C,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAEtB,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC,CAAC;IACJ,CAAC;IAED,QAAQ,CAAsB,IAAO,EAAE,GAAG,IAA6B;QACrE,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,QAAQ,EAAE;YACZ,kDAAkD;YAClD,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACxB,OAAsD,CAAC,GAAG,IAAI,CAAC,CAAC;YACnE,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF","sourcesContent":["import { Position, SelectRowEvent } from './types';\n\ninterface EventMap {\n  SelectCell: (position: Position, openEditor?: boolean) => void;\n  SelectRow: (event: SelectRowEvent) => void;\n  ToggleGroup: (id: unknown) => void;\n}\n\ntype EventName = keyof EventMap;\n\nexport default class EventBus {\n  private readonly subscribers = new Map<EventName, Set<EventMap[EventName]>>();\n\n  subscribe<T extends EventName>(type: T, handler: EventMap[T]) {\n    if (!this.subscribers.has(type)) {\n      this.subscribers.set(type, new Set());\n    }\n\n    const handlers = this.subscribers.get(type)!;\n    handlers.add(handler);\n\n    return () => {\n      handlers.delete(handler);\n    };\n  }\n\n  dispatch<T extends EventName>(type: T, ...args: Parameters<EventMap[T]>) {\n    const handlers = this.subscribers.get(type);\n    if (handlers) {\n      // handler needed a type assertion to fix type bug\n      handlers.forEach(handler => {\n        (handler as (...args: Parameters<EventMap[T]>) => void)(...args);\n      });\n    }\n  }\n}\n"]}